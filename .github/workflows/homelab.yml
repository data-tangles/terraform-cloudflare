name: Homelab Domain CD

on:
  push:
    branches:
    - "main"
    paths:
    - "homelab_domain/**"
  pull_request:
    branches:
    - "main"
    paths:
    - "homelab_domain/**"
  workflow_dispatch:

permissions:
  contents: write
  issues: write

env:
  SOPS_VERSION: 3.9.4
  WORKING_DIRECTORY: "./homelab_domain"

jobs:
  init_and_plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest

    outputs:
      planExitcode: ${{ steps.terraformPlan.outputs.exitcode }}

    steps:

      - name: Checkout 🔔
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Decrypt SOPS encrypted variables 🪙
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v${{ env.SOPS_VERSION }}/sops-v${{ env.SOPS_VERSION }}.linux.amd64
          sudo mv sops-v${{ env.SOPS_VERSION }}.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
          export SOPS_AGE_KEY=${{ secrets.SOPS_AGE_KEY }}
          sops --decrypt ${{ env.WORKING_DIRECTORY }}/terraform.sops.tfvars > ${{ env.WORKING_DIRECTORY }}/terraform.tfvars       

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform Init 🏃
        id: terraformInit
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Plan 🗺️
        id: terraformPlan
        run: |
          terraform plan -input=false -out ${{ github.run_id }}.tfplan -detailed-exitcode
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Cache Terraform Plan 📦
        uses: actions/cache/save@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ${{ env.WORKING_DIRECTORY }}/**
          key: ${{ github.run_id }}

  apply:
    name: Terraform Apply
    needs:
      - init_and_plan
    if: github.event_name != 'pull_request' && needs.init_and_plan.outputs.planExitcode == 2
    runs-on: ubuntu-latest

    steps:

      - name: Manual Approval 🚦
        uses: trstringer/manual-approval@662b3ddbc7685f897992051e87e1b4b58c07dc03 # v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: data-tangles
          minimum-approvals: 1
          issue-title: "Terraform Apply - ${{ github.workflow }}"
          issue-body: "Please approve or deny the Terraform Apply operation"
          exclude-workflow-initiator-as-approver: false

      - name: Checkout 🔔
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Restore Terraform Plan 🗺️
        uses: actions/cache/restore@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ${{ env.WORKING_DIRECTORY }}/**
          key: ${{ github.run_id }}

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}  

      - name: Terraform Apply 🚀
        run: terraform apply ${{ github.run_id }}.tfplan
        working-directory: ${{ env.WORKING_DIRECTORY }}

