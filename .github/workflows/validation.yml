name: Terraform Validation CI

on:
  push:
    branches:
    - "main"
  pull_request:
    branches:
      - main

permissions:
  contents: write

env:
  TF_DOCS_VERSION: 0.20.0
  GIT_USER_NAME: "tangles-bot[bot]"
  GIT_USER_EMAIL: "169585682+tangles-bot[bot]@users.noreply.github.com"

jobs:
  validation:
    name: Run Validation Checks 
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:

    - name: Generate GitHub App Token ü™ô
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
      id: generate-token
      with:
        app_id: ${{ secrets.TANGLES_BOT_APP_ID }}
        private_key: ${{ secrets.TANGLES_BOT_PRIVATE_KEY }}

    - name: Checkout üîî
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ steps.generate-token.outputs.token }}

    - name: Install Terraform ‚õ∞Ô∏è
      uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3

    - name: Run TFLint ‚úÖ 
      uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4
      with:
        tflint_version: latest

  changelog:
    name: Generate Changelog üóíÔ∏è
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:

    - name: Generate GitHub App Token ü™ô
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2
      id: generate-token
      with:
        app_id: ${{ secrets.TANGLES_BOT_APP_ID }}
        private_key: ${{ secrets.TANGLES_BOT_PRIVATE_KEY }}

    - name: Checkout üîî
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ steps.generate-token.outputs.token }}

    - name: Download and install Terraform Docs
      run: |
        curl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v${{ env.TF_DOCS_VERSION}}/terraform-docs-v${{ env.TF_DOCS_VERSION}}-$(uname)-amd64.tar.gz
        tar -xzf terraform-docs.tar.gz
        chmod +x terraform-docs
        mv terraform-docs /usr/local/bin/terraform-docs

    - name: Generate Terraform Docs üóíÔ∏è
      run: |
        # Get folders which contain .tf files
        folder_list=$(find . -name '*.tf' -printf '%h\n' | sort -u)
      
        # Run terraform-docs command for each subfolder
        for folder in $folder_list; do
          terraform-docs markdown table --output-file README.md "$folder"
        done

        - name: Commit and push changes if README.md updated
        run: |
          git config --global user.name "${{ env.GIT_USER_NAME }}"
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
          
          # Check for changes
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "chore(docs): update Terraform module documentation"
            git push
          else
            echo "No changes to commit."
          fi

    - name: Conventional Changelog Action üìã
      id: changelog
      uses: TriPSs/conventional-changelog-action@3a392e9aa44a72686b0fc13259a90d287dd0877c # v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        git-user-name: "${{ env.GIT_USER_NAME }}"
        git-user-email: "${{ env.GIT_USER_EMAIL }}"
        git-branch: "${{ github.head_ref }}"
        skip-on-empty: "true"
        skip-ci: "false"
        release-count: 10
        version-file: package.yaml
        create-summary: true      
